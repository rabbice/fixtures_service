// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: proto/fixture_message.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Fixture struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID       string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Hometeam string `protobuf:"bytes,2,opt,name=hometeam,proto3" json:"hometeam,omitempty"`
	Awayteam string `protobuf:"bytes,3,opt,name=awayteam,proto3" json:"awayteam,omitempty"`
	Score    *Score `protobuf:"bytes,4,opt,name=score,proto3" json:"score,omitempty"`
	Time     *Time  `protobuf:"bytes,5,opt,name=time,proto3" json:"time,omitempty"`
	Official string `protobuf:"bytes,6,opt,name=official,proto3" json:"official,omitempty"`
	Stats    *Stats `protobuf:"bytes,7,opt,name=stats,proto3" json:"stats,omitempty"`
	Pitch    *Pitch `protobuf:"bytes,8,opt,name=pitch,proto3" json:"pitch,omitempty"`
}

func (x *Fixture) Reset() {
	*x = Fixture{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fixture_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fixture) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fixture) ProtoMessage() {}

func (x *Fixture) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fixture_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fixture.ProtoReflect.Descriptor instead.
func (*Fixture) Descriptor() ([]byte, []int) {
	return file_proto_fixture_message_proto_rawDescGZIP(), []int{0}
}

func (x *Fixture) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Fixture) GetHometeam() string {
	if x != nil {
		return x.Hometeam
	}
	return ""
}

func (x *Fixture) GetAwayteam() string {
	if x != nil {
		return x.Awayteam
	}
	return ""
}

func (x *Fixture) GetScore() *Score {
	if x != nil {
		return x.Score
	}
	return nil
}

func (x *Fixture) GetTime() *Time {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *Fixture) GetOfficial() string {
	if x != nil {
		return x.Official
	}
	return ""
}

func (x *Fixture) GetStats() *Stats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *Fixture) GetPitch() *Pitch {
	if x != nil {
		return x.Pitch
	}
	return nil
}

type Pitch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Commentary bool     `protobuf:"varint,2,opt,name=commentary,proto3" json:"commentary,omitempty"`
	Attendance int32    `protobuf:"varint,3,opt,name=attendance,proto3" json:"attendance,omitempty"`
	Weather    *Weather `protobuf:"bytes,4,opt,name=weather,proto3" json:"weather,omitempty"`
}

func (x *Pitch) Reset() {
	*x = Pitch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_fixture_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pitch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pitch) ProtoMessage() {}

func (x *Pitch) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fixture_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pitch.ProtoReflect.Descriptor instead.
func (*Pitch) Descriptor() ([]byte, []int) {
	return file_proto_fixture_message_proto_rawDescGZIP(), []int{1}
}

func (x *Pitch) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Pitch) GetCommentary() bool {
	if x != nil {
		return x.Commentary
	}
	return false
}

func (x *Pitch) GetAttendance() int32 {
	if x != nil {
		return x.Attendance
	}
	return 0
}

func (x *Pitch) GetWeather() *Weather {
	if x != nil {
		return x.Weather
	}
	return nil
}

var File_proto_fixture_message_proto protoreflect.FileDescriptor

var file_proto_fixture_message_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x69, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x66,
	0x69, 0x78, 0x74, 0x75, 0x72, 0x65, 0x73, 0x1a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x86, 0x02, 0x0a, 0x07, 0x46, 0x69, 0x78, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x61, 0x6d, 0x12, 0x1a, 0x0a,
	0x08, 0x61, 0x77, 0x61, 0x79, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x77, 0x61, 0x79, 0x74, 0x65, 0x61, 0x6d, 0x12, 0x25, 0x0a, 0x05, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x66, 0x69, 0x78, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x12, 0x22, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x66, 0x69, 0x78, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c,
	0x12, 0x25, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x66, 0x69, 0x78, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0x25, 0x0a, 0x05, 0x70, 0x69, 0x74, 0x63, 0x68,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x66, 0x69, 0x78, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x2e, 0x50, 0x69, 0x74, 0x63, 0x68, 0x52, 0x05, 0x70, 0x69, 0x74, 0x63, 0x68, 0x22, 0x88,
	0x01, 0x0a, 0x05, 0x50, 0x69, 0x74, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x07,
	0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x66, 0x69, 0x78, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2e, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72,
	0x52, 0x07, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_fixture_message_proto_rawDescOnce sync.Once
	file_proto_fixture_message_proto_rawDescData = file_proto_fixture_message_proto_rawDesc
)

func file_proto_fixture_message_proto_rawDescGZIP() []byte {
	file_proto_fixture_message_proto_rawDescOnce.Do(func() {
		file_proto_fixture_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_fixture_message_proto_rawDescData)
	})
	return file_proto_fixture_message_proto_rawDescData
}

var file_proto_fixture_message_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_fixture_message_proto_goTypes = []interface{}{
	(*Fixture)(nil), // 0: fixtures.Fixture
	(*Pitch)(nil),   // 1: fixtures.Pitch
	(*Score)(nil),   // 2: fixtures.Score
	(*Time)(nil),    // 3: fixtures.Time
	(*Stats)(nil),   // 4: fixtures.Stats
	(*Weather)(nil), // 5: fixtures.Weather
}
var file_proto_fixture_message_proto_depIdxs = []int32{
	2, // 0: fixtures.Fixture.score:type_name -> fixtures.Score
	3, // 1: fixtures.Fixture.time:type_name -> fixtures.Time
	4, // 2: fixtures.Fixture.stats:type_name -> fixtures.Stats
	1, // 3: fixtures.Fixture.pitch:type_name -> fixtures.Pitch
	5, // 4: fixtures.Pitch.weather:type_name -> fixtures.Weather
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_proto_fixture_message_proto_init() }
func file_proto_fixture_message_proto_init() {
	if File_proto_fixture_message_proto != nil {
		return
	}
	file_proto_time_message_proto_init()
	file_proto_scores_message_proto_init()
	file_proto_weather_message_proto_init()
	file_proto_stats_message_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_fixture_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fixture); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_fixture_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pitch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_fixture_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_fixture_message_proto_goTypes,
		DependencyIndexes: file_proto_fixture_message_proto_depIdxs,
		MessageInfos:      file_proto_fixture_message_proto_msgTypes,
	}.Build()
	File_proto_fixture_message_proto = out.File
	file_proto_fixture_message_proto_rawDesc = nil
	file_proto_fixture_message_proto_goTypes = nil
	file_proto_fixture_message_proto_depIdxs = nil
}
